name: build
on:
  push:
    paths:
      - "src/**"
      - "test/**"
      - "package.json"
      - ".github/workflows/build.yml"
  pull_request_target:
    paths:
      - "src/**"
      - "test/**"
      - "package.json"
jobs:
  check-list-updated:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm prepare
      - name: check-list-updated
        run: git diff --exit-code

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: root
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: Install
        run: pnpm install
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Build Test Program
        run: |
          pnpm build:prisma
          pnpm build:sdk
          pnpm build:test
      - name: Upload build artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build
          path: |
            ./bin

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download build artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: build
          path: |
            ./bin
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
      - name: install dependencies
        run: pnpm install && pnpm build:prisma
      - name: Secrets to Env
        run: |
          rm .env
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Start Docker Compose
        run: |
          docker compose -f docker-compose-test.yml up -d
          sleep 5;
          npx prisma db push
      - name: test
        run: | # sweet_tracker, google_ads는 현재 테스트 대상이 아님
          pnpm test \
            --exclude sweet_tracker korea_exim kakao jira slack github figma discord similarweb crunchbase \
            google_ads google_slides google_calendar google_docs google_drive google_flight \
            open_data calendly notion naver typeform x_summarize x_prepare_summarize x_get_pre_defined_influencers x_get_users airport youtube_official innoforest

